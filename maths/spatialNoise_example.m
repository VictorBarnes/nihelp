figure;
weightings = 0.25:0.25:2;

for ii = 1:length(weightings)
    %% use the x,y,z coordinates (set to the range -1 to 1) as dummay "maps" of brain data
    % mainMaps = lh_verts;
    % mainMaps = [resampleMatrix(lh_verts(:, 1)), resampleMatrix(lh_verts(:, 2)), resampleMatrix(lh_verts(:, 3))];
    mainMaps = (lh_verts - min(lh_verts)) ./ (max(lh_verts) - min(lh_verts)) * 2 - 1;

    %% generate some random noise maps
    % in this case, dummy maps generated by using combinations of the original
    % maps    
    randCoeffs = rand(3, 100)-0.5;
    randCoeffs = randCoeffs ./ sqrt(sum((randCoeffs.*randCoeffs), 1));
    randMaps = mainMaps * randCoeffs;

    %% generate the dummy data by adding the noise maps to the original maps
    % note the 'weighting' coefficient, which determines the contribution of the
    % new maps
    newMaps = repelem( mainMaps, 1, size( randMaps, 2 ) ) + repmat( randMaps, 1, size( mainMaps, 2 ) ) * weightings(ii);
    newMaps = [newMaps, mainMaps];

    %% plot PCA loadings
    coeff = pca(newMaps);
    subplot(2, 4, ii);
%     scatter(coeff(:, 1), coeff(:, 2), [], [ones(300,1);0;0;0], 'filled');
    idx = kmeans(newMaps', 3); scatter(coeff(:, 1), coeff(:, 2), [], idx, 'filled');
    title(weightings(ii))

end